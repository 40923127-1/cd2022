<h1>Starting</h1>
<h4>建立倉儲</h4>
<p>先在github建立一個名為cd2022的空倉儲，然後用git clone複製下來，裡面只會有一個.git資料夾，去github的setting&gt;Developer settings&gt;Personal acces tokens 建立一個token方便push(token要用在.git的config裡)</p>
<h4>建立網頁</h4>
<p>從<a href="https://github.com/mdecourse/cmsimde/tree/4b2719e4137d10ad2784e2f2661f474d7b2215da">cmsimde</a>用</p>
<p><s>git clone --recurse-submodules 網址</s></p>
<p><s>接著從cmsimde&gt;up_dir裡複製除了downloads的所有檔案到倉儲裡，即可在根目錄用cms(開啟網頁)和acp(簡易的psuh)指令</s></p>
<p>上面是錯誤的，那是用在clone有子模組的倉儲，我們是要把子模組導入我們的倉儲，如果不用</p>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false"> git submodules add 網址</pre>
<p></p>
<p>會缺少一個.gitmoules的檔案，這樣子模組無法運作，網頁也出不來。</p>
<p></p>
<p>git的push動作</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">git add .
git commit -m %message%
git push

</pre>
<p>acp就是把這些指令寫在一起的批次檔<br/><br/></p>
<h1>13</h1>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document
import random

brython_div = document["brython_div"]

# 根據 href 與 content 將 html 元件中的 anchor 插入頁面
def makeLink(href, content):
    brython_div &lt;= html.A(content, href=href)
    #brython_div &lt;= html.BR()

aorb = "b"
url = "https://mde.tw/studlist/2022spring/2b.txt"
course = "cd2022"
# 從 url 讀取資料後, 以跳行符號分割資料進入數列後
# 去除數列中的第一筆與最後一筆資料後可得每位學員所填的資料
data = open(url).read().split("\n")[1:-1]
#print(data)
# 再以 \t 分割每位學員的資料, 
#可以取得每位學員的學號, github 帳號與組別
big = []
num_github = {}
for i in data:
    stud_no, github, grp_no = i.split("\t")
    #print(stud_no, github, grp_no)
    big.append([stud_no, github, grp_no])
    if github != "":
        num_github[stud_no] = github
    else:
        num_github[stud_no] = stud_no
#print(big)
# 根據每一 element 的第三個 element sort
big.sort(key = lambda x: x[2])
# big 已經按照組別排序
#print(big)
ungrouped = []
grouped = []
for i in big:
    if i[2] == "":
        ungrouped.append(i[0])
    else:
        # 將組別放到第一位置
        grouped.append([i[2], i[0]])
#print(grouped)
#print(ungrouped)
d = {}
# 逐一檢視 grouped 數列
for i in grouped:
    # 若該組序已存在 d dict 中,
    # 則以 extend() 納入除組序之外的組員學號
    if i[0] in d:
        d[i[0]].extend(i[1:])
        #print("i[0] in d:",i[0], "d:", d)
    else:
        # 若已納分組的 element 中之組序為全新組序,
        # 則將該已納分組的 element 放入 dict 首位元素
        # 準備透過 extend() 納入其他組員學號
        d[i[0]] = i
        #print("i i[0] not in d:", i, "d:", d)
#print("finally d:", d, "d.values():", d.values())
group_member = list(d.values())
# group_member 第一位為組序, 隨後為組員學號
#print(group_member)
random.shuffle(ungrouped)
#print("ungrouped:" + str(len(ungrouped)))
grp = 1
group = []
for i in group_member:
    #print("grp " + str(i[0]) + ": num, " + str(len(i[1:])))
    if len(i[1:]) &lt; 8:
        #print("can take " + str(8 - len(i[1:])) + "members")
        # 若仍有學員未納組, 則可根據缺額補入學員學號
        try:
            #print("add " + str(ungrouped[:8-len(i[1:])]))
            i.extend(list(ungrouped[:8-len(i[1:])]))
            # 拿掉已經分配組別的學員學號
            ungrouped = ungrouped[8-len(i[1:]):]
        except:
            #print("no member to add!")
            pass
    else:
        #print("full")
        pass
    # 根據增量決定組序
    i[0] = str(grp)
    group.append(i)
    grp += 1
#print(group)
for i in group:
    brython_div &lt;= "第" + str(i[0]) + "組:" + html.BR()
    grp_repo = course + aorb + "g" + str(i[0])
    for num in i[1:]:
        # num 為各組組員學號
        #print(num)
        studhref = "https://"+ str(num_github[num]) + ".github.io/" + course
        repohref = "https://github.com/"+ str(num_github[num]) +"/"+course
        grphref = "https://"+ str(num_github[num]) + ".github.io/" + grp_repo
        grp_repohref = "https://github.com/"+ str(num_github[num]) +"/" + grp_repo       
        brython_div &lt;= "repo: "
        makeLink(repohref, str(num))
        brython_div &lt;= " www: "
        makeLink(studhref, str(num))
        brython_div &lt;= " " + grp_repo + "-repo: "
        makeLink(grp_repohref, str(num))
        brython_div &lt;= " " + grp_repo + "-www: "
        makeLink(grphref, str(num))
        brython_div &lt;= html.BR()
print("done")</pre>
<h2>20220316</h2>
<p></p>
<p>今天建立小組倉儲同步</p>
<p><a href="https://github.com/40923125/cd2022ag4">小組倉儲</a></p>
<h1>NX1980</h1>
<p></p>
<script>
var winkVideoData = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { "2": [ { type: "gotoframe", rect: { x: 570, y: 355, width: 30, height: 12 }, target: 3 },
</script>
<p><a href="https://www.youtube.com/watch?v=GUaa97tALxE&amp;list=PLzEsJue49U_EMMv0eBo8MNJjJOq_WHCrl">教學影片</a></p>
<p></p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">NX Tutorial 1 - View Controls - Version 1855</yt-formatted-string></h4>
<p>如何使用滑鼠控制視角</p>
<p>F8正視</p>
<p>ctrl+H/clip section 剖面</p>
<p>Show and hide 顯示設定</p>
<p>fIT/Ctrl+f 重製視角</p>
<h2>1</h2>
<p></p>
<script>
var winkVideoData = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { "2": [ { type: "gotoframe", rect: { x: 570, y: 355, width: 30, height: 12 }, target: 3 },
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" data-dirname="/staic" data-varname="winkVideoData" height="540" video="" width="960">
<source src="./../downloads/NX1.1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<h1>w7 summary</h1>
<p>今天clone了<a href="https://github.com/mdecourse/scarysim.git">https://github.com/mdecourse/scarysim.git</a>，修改了 scarysim.pro(蓋掉第11行)，因為用的隨身系統過舊，裡面沒有需要的程式，所以下載<a href="https://drive.google.com/file/d/16L08jH3ZtoMeeGWBJrP9DuIk-cby_Wqw/view">新的隨身系統</a>。</p>
<p>因為隨身系統容量過大，所以正在解壓縮。</p>
<p><br/><img alt="" height="550" src="/images/未命名.png" width="1052"/></p>
<h1>W8</h1>
<p><a href="https://gmnfuedutw-my.sharepoint.com/:f:/g/personal/40923127_gm_nfu_edu_tw/Eg4lRv1LSipNn0t8A3HvWXABgTu9tTi-PmKwNAJRp37Hkw?e=Xjfgko">uarm工程圖</a></p>
<h1>W10</h1>
<p></p>
<p>建立NX1980的Block UI</p>
<p>使用SSH</p>
<h2>w10_ssh</h2>
<script>
var winkVideoData_w10ssh = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w10ssh" height="100%" muted="true" width="100%">
<source src="./../downloads/w10_ssh.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"></div>
<h2>w10_block_ui</h2>
<script>
var winkVideoData_w10block = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w10block" height="100%" muted="true" width="100%">
<source src="./../downloads/w10Mblock.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"></div>
<h1>W14</h1>
<p></p>
<p><span>以鍵盤控制 MTB_nx robot (for CoppeliaSim 4.3.0)的程式碼</span></p>
<p><span>math.pi 圓周率</span></p>
<p><span>360度=2倍的圓周率</span></p>
<p><span>1度=math.pi/180</span></p>
<p><span>sim.getObject('/零件名字')</span></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    axis1=sim.getObject('/joint1')
    axis2=sim.getObject('/joint2')
    axis3=sim.getObject('/joint3')
    suctionPad=sim.getObject('/suctionPad')
    MTB_Robot=sim.getObject("/base")
    BaseFrame=sim.getObject("/BaseFrame")
    block =sim.getObject("/block")
    rotation1 = 0
    distance3 = 0
    deg = math.pi/180.
end
 
 
function sysCall_actuation() 
--[[
    rotation1 = rotation1 + 0.5*deg
    print(rotation1)
    sim.setJointPosition(axis1, -rotation1)
    sim.setJointPosition(axis2, -rotation1)
]]
 
    message, auxiliaryData=sim.getSimulatorMessage()
        while message ~= -1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('user press key:'..key)
            if (message==sim.message_keypress) then
               --if (auxiliaryData[1]==112) then --p activate the suction pad
                if (auxiliaryData[1]==string.byte('p')) then
                    -- if key p pressed activate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                end -- if p
                if (auxiliaryData[1]==113) then --q deactivate the suction pad
                    -- if key q pressed deactivate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                end -- if q
                if (auxiliaryData[1]==114) then --r right turn in degree
                    -- if key r pressed axis1 angle adds 5 degrees
                     rotation1 = rotation1 + 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if r
                if (auxiliaryData[1]==108) then --l left turn in degree
                    -- if key l pressed axis1 angle substract 5 degrees
                     rotation1 = rotation1 - 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if l
                if (auxiliaryData[1]==100) then --d suction pad down
                    -- if key d pressed axis3 will down 0.01 m
                     distance3 = distance3 + 0.01
                     sim.setJointPosition(axis3, distance3)
                end -- if d
                if (auxiliaryData[1]==117) then --u suction pad up
                    -- if key u pressed axis3 will up 0.01 m
                     distance3 = distance3 - 0.01
                     sim.setJointPosition(axis3, distance3)
                end -- if u
                if (auxiliaryData[1]==99) then --c coordinate of block
                    --blockPosition = sim.getObjectPosition(block, BaseFrame)
                    blockPosition = sim.getObjectPosition(suctionPad, BaseFrame)
                    sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))
                end --if c
           end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
        end -- while
end -- function
function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)
 
    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end
 
    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)
 
            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end
 
    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
     
]]--
end
function sysCall_cleanup() 
end
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end
 
        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end
 
 
function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end</pre>
<p><span></span>會自己動的版本</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h1>期末考週</h1>
<h2>NX左右互換繪圖重點</h2>
<script>
var winkVideoData_w18NX= {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
</script>
<!-- 將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w18NX" height="200%" muted="true" width="200%">
<source src="./../downloads/w18/wink/w18.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass" style="border: thin solid black; padding: 10px;"></div>